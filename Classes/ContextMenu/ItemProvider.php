<?php
declare(strict_types=1);
namespace MichielRoos\WizardCrpagetree\ContextMenu;

use TYPO3\CMS\Backend\ContextMenu\ItemProviders\PageProvider;
use TYPO3\CMS\Backend\Routing\UriBuilder;
use TYPO3\CMS\Core\Utility\GeneralUtility;

/**
 * Class ItemProvider
 * @package MichielRoos\WizardCrpagetree\ContextMenu
 */
class ItemProvider extends PageProvider
{
    protected $itemsConfiguration = [
        'pagesNewTree' => [
            'type'           => 'item',
            'label'          => 'LLL:EXT:wizard_crpagetree/Resources/Private/Language/locallang.xlf:title',
            'iconIdentifier' => 'apps-pagetree-drag-move-between',
            'callbackAction' => 'pagesNewTree'
        ]
    ];

    /**
     * This method adds custom item to list of items generated by item providers with higher priority value (PageProvider)
     * You could also modify existing items here.
     * The new item is added after the 'info' item.
     *
     * @param array $items
     * @return array
     */
    public function addItems(array $items): array
    {
        $this->initialize();
        $this->initDisabledItems();

        if (isset($items['info'])) {
            // renders an item based on the configuration from $this->itemsConfiguration
            $localItems = $this->prepareItems($this->itemsConfiguration);
            //finds a position of the item after which this item should be added
            $position = array_search('info', array_keys($items), true);

            // slices array into two parts
            $beginning = array_slice($items, 0, $position + 1, true);
            $end = array_slice($items, $position, null, true);

            // adds custom item in the correct position
            $items = $beginning + $localItems + $end;
        }
        //passes array of items to the next item provider
        return $items;
    }

    /**
     * Returns the provider priority which is used for determining the order in which providers are processing items
     * to the result array. Highest priority means provider is evaluated first.
     *
     * This item provider should be called after PageProvider which has priority 100.
     *
     * BEWARE: Returned priority should logically not clash with another provider.
     *         Please check @return int
     * @see \TYPO3\CMS\Backend\ContextMenu\ContextMenu::getAvailableProviders() if needed.
     *
     */
    public function getPriority(): int
    {
        return 90;
    }

    /**
     * @param string $itemName
     * @return array
     * @throws \TYPO3\CMS\Backend\Routing\Exception\RouteNotFoundException
     */
    protected function getAdditionalAttributes(string $itemName): array
    {
        $attributes = [];
        if ($itemName === 'pagesNewTree') {
            $uriBuilder = GeneralUtility::makeInstance(UriBuilder::class);
            $attributes += [
                'data-page-new-tree-url' => (string)$uriBuilder->buildUriFromRoute('pagetree_new', ['id' => $this->record['uid']]),
                'data-callback-module'   => 'TYPO3/CMS/WizardCrpagetree/ContextMenuActions',
            ];
        }
        return $attributes;
    }

    /**
     * This method is called for each item this provider adds and checks if given item can be added
     *
     * @param string $itemName
     * @param string $type
     * @return bool
     */
    protected function canRender(string $itemName, string $type): bool
    {
        // checking if item is disabled through TSConfig
        if (in_array($itemName, $this->disabledItems, true)) {
            return false;
        }
        return $itemName === 'pagesNewTree' && $this->canBeCreated();
    }
}
